generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int          @id @default(autoincrement())
  avatar           String?
  name             String?
  email            String?      @unique
  role             UserRole?
  description      String?
  links            Json?
  metadata         Json?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  walletAddress    String
  ownedGrantsPools GrantsPool[] @relation("UserGrantsPools")
  pods             Pod[]        @relation("UserPods")

  @@index([email])
  @@index([role])
  @@index([walletAddress])
}

model GrantsPool {
  id               Int              @id @default(autoincrement())
  avatar           String?
  name             String
  description      String
  links            Json?
  tags             String?
  modInfo          Json
  treasuryWallet   String
  treasuryBalances Json? @default("{}") //{"USDC": {"available": "0", "used": "0", "locked": "0"},"USDT": {available: "0", used: "0", locked: "0"}}
  chainType        ChainType
  status           GrantsPoolStatus @default(ACTIVE)
  metadata         Json?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  ownerId          Int
  owner            User             @relation("UserGrantsPools", fields: [ownerId], references: [id])
  pods             Pod[]            @relation("GrantsPoolPods")
  rfps             Rfps[]

  @@index([name])
  @@index([chainType])
  @@index([status])
  @@index([ownerId])
  @@index([treasuryWallet])
}

model Rfps {
  id           Int        @id @default(autoincrement())
  grantsPoolId Int
  title        String
  description  String
  metadata     Json?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  inactiveTime DateTime?
  grantsPool   GrantsPool @relation(fields: [grantsPoolId], references: [id], onDelete: Cascade)

  @@index([grantsPoolId])
}

model Pod {
  id                Int         @id @default(autoincrement())
  podGroupId        Int         @default(autoincrement()) @unique // 使用自增 ID 作为唯一标识
  applicantId       Int
  grantsPoolId      Int
  rfpIndex          Int
  walletAddress     String
  avatar            String?
  title             String
  description       String
  links             Json?
  tags             String?
  currency          String
  status            PodStatus   @default(REVIEWING)
  metadata          Json?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  inactiveTime      DateTime?   // 失效时间，null 表示当前活跃版本
  milestones        Milestone[] @relation("PodMilestones")
  applicant         User        @relation("UserPods", fields: [applicantId], references: [id])
  grantsPool        GrantsPool  @relation("GrantsPoolPods", fields: [grantsPoolId], references: [id])

  @@index([applicantId])
  @@index([grantsPoolId])
  @@index([status])
  @@index([podGroupId])
  @@index([inactiveTime])
}

model Milestone {
  id               Int             @id @default(autoincrement())
  podId            Int
  title            String
  description      String
  amount           Int
  deadline         DateTime
  status           MilestoneStatus @default(ACTIVE)
  currentPhase     String          @default("PENDING")
  deliveryInfo     Json?  //{content: string, links: string[], deadline: string}
  metadata         Json?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  pod              Pod             @relation("PodMilestones", fields: [podId], references: [id], onDelete: Cascade)

  @@index([podId])
  @@index([status])
  @@index([currentPhase])
}

enum UserRole {
  ADMIN
  GP_MOD
  APPLICANT
  VIEWER
}

enum ChainType {
  ETHEREUM
  OPTIMISM
}

enum GrantsPoolStatus {
  ACTIVE
  INACTIVE
  ARCHIVED
}

enum PodStatus {
  REVIEWING // 审核中
  APPROVED // 批准
  REJECTED // 拒绝
  IN_PROGRESS // 进行中
  COMPLETED // 完成
  TERMINATED // 终止失败
}

enum MilestoneStatus {
  ACTIVE
  INACTIVE
  COMPLETED
  REJECTED
  APPROVED
  REVIEWING
}